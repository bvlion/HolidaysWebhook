import com.github.spotbugs.SpotBugsTask

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'scala'
    id 'idea'
    id 'checkstyle'
    id 'com.github.spotbugs' version '2.0.0'
}

group = 'net.ambitious.bvlion.batch2'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
    implementation 'org.scala-lang:scala-library:2.13.1'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'junit:junit:4.12'

    compile 'com.github.spotbugs:spotbugs:4.0.+'
}

spotbugs {
    toolVersion = '4.0.0-beta4'
    excludeFilter = file("${project.rootDir}/findbugs-exculde.xml")
    spotbugsTest.enabled false
}

checkstyle {
    toolVersion '7.8.1'
    configFile file("$rootDir/checkstyle.xml")
    checkstyleTest.enabled false
}

tasks.withType(SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }

    classes = classes.filter {
        !it.path.contains(new File("config/").path) &&
                !it.path.contains(new File("net.ambitious.mapper/").path) &&
                !it.path.contains(new File("logback.xml").path)
    }
}
